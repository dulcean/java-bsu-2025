package production;

import production.analyzer.ProdAnalyzer;
import production.line.*;
import production.model.*;

import java.util.List;

public class Main {
    public static void main(String[] args) {
        var eLine = new ElectronicsLine("EL-1", 0.95);
        eLine.addProduct(new ElectronicProduct("E1", "Smartphone", 120));
        eLine.addProduct(new ElectronicProduct("E2", "Laptop", 240));

        var mLine = new MechanicalLine("ML-1", 0.82);
        mLine.addProduct(new MechanicalProduct("M1", "Engine", 360));

        var cLine = new ChemicalLine("CL-1", 0.76);
        cLine.addProduct(new ChemicalProduct("C1", "Paint", 180));
        cLine.addProduct(new ChemicalProduct("C2", "Solvent", 90));

        var analyzer = new ProdAnalyzer(List.of(eLine, mLine, cLine));

        System.out.println("‚öôÔ∏è –õ–∏–Ω–∏–∏ —Å –≤—ã—Å–æ–∫–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é (>0.8): " + analyzer.getHighEfficiencyLines(0.8));
        System.out.println("üì¶ –ö–æ–ª-–≤–æ –∏–∑–¥–µ–ª–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º: " + analyzer.countProductsByCategory());
        System.out.println("üìà –°–∞–º–∞—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–∞—è –ª–∏–Ω–∏—è: " + analyzer.findMostLoadedLine().map(ProductionLine::getLineId).orElse("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"));
        System.out.println("üßæ –í—Å–µ –∏–∑–¥–µ–ª–∏—è: " + analyzer.getAllProductsFromLines());
        System.out.println("‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: " + analyzer.calculateTotalProductionTime() + " –º–∏–Ω");
    }
}
